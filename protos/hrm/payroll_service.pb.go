// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.7
// source: payroll_service.proto

package hrm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddPayrollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// ctc
	//
	// Types that are assignable to Ctc:
	//	*AddPayrollRequest_Yearly
	//	*AddPayrollRequest_Monthly
	Ctc       isAddPayrollRequest_Ctc `protobuf_oneof:"ctc"`
	Allowance int32                   `protobuf:"varint,4,opt,name=allowance,proto3" json:"allowance,omitempty"`
	// organization the emplolyee belongs to
	OrganizationName string `protobuf:"bytes,5,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	// employee id
	CreatorId string `protobuf:"bytes,6,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
}

func (x *AddPayrollRequest) Reset() {
	*x = AddPayrollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payroll_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPayrollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPayrollRequest) ProtoMessage() {}

func (x *AddPayrollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPayrollRequest.ProtoReflect.Descriptor instead.
func (*AddPayrollRequest) Descriptor() ([]byte, []int) {
	return file_payroll_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddPayrollRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (m *AddPayrollRequest) GetCtc() isAddPayrollRequest_Ctc {
	if m != nil {
		return m.Ctc
	}
	return nil
}

func (x *AddPayrollRequest) GetYearly() int32 {
	if x, ok := x.GetCtc().(*AddPayrollRequest_Yearly); ok {
		return x.Yearly
	}
	return 0
}

func (x *AddPayrollRequest) GetMonthly() int32 {
	if x, ok := x.GetCtc().(*AddPayrollRequest_Monthly); ok {
		return x.Monthly
	}
	return 0
}

func (x *AddPayrollRequest) GetAllowance() int32 {
	if x != nil {
		return x.Allowance
	}
	return 0
}

func (x *AddPayrollRequest) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *AddPayrollRequest) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

type isAddPayrollRequest_Ctc interface {
	isAddPayrollRequest_Ctc()
}

type AddPayrollRequest_Yearly struct {
	Yearly int32 `protobuf:"varint,2,opt,name=yearly,proto3,oneof"`
}

type AddPayrollRequest_Monthly struct {
	Monthly int32 `protobuf:"varint,3,opt,name=monthly,proto3,oneof"`
}

func (*AddPayrollRequest_Yearly) isAddPayrollRequest_Ctc() {}

func (*AddPayrollRequest_Monthly) isAddPayrollRequest_Ctc() {}

// respond with the username of employee
type PayrollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *PayrollResponse) Reset() {
	*x = PayrollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payroll_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayrollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollResponse) ProtoMessage() {}

func (x *PayrollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollResponse.ProtoReflect.Descriptor instead.
func (*PayrollResponse) Descriptor() ([]byte, []int) {
	return file_payroll_service_proto_rawDescGZIP(), []int{1}
}

func (x *PayrollResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UpdatePayrollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// ctc
	//
	// Types that are assignable to Ctc:
	//	*UpdatePayrollRequest_Yearly
	//	*UpdatePayrollRequest_Monthly
	Ctc isUpdatePayrollRequest_Ctc `protobuf_oneof:"ctc"`
	// employee id
	UpdaterId string `protobuf:"bytes,4,opt,name=updater_id,json=updaterId,proto3" json:"updater_id,omitempty"`
}

func (x *UpdatePayrollRequest) Reset() {
	*x = UpdatePayrollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payroll_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayrollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayrollRequest) ProtoMessage() {}

func (x *UpdatePayrollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayrollRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayrollRequest) Descriptor() ([]byte, []int) {
	return file_payroll_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePayrollRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (m *UpdatePayrollRequest) GetCtc() isUpdatePayrollRequest_Ctc {
	if m != nil {
		return m.Ctc
	}
	return nil
}

func (x *UpdatePayrollRequest) GetYearly() int32 {
	if x, ok := x.GetCtc().(*UpdatePayrollRequest_Yearly); ok {
		return x.Yearly
	}
	return 0
}

func (x *UpdatePayrollRequest) GetMonthly() int32 {
	if x, ok := x.GetCtc().(*UpdatePayrollRequest_Monthly); ok {
		return x.Monthly
	}
	return 0
}

func (x *UpdatePayrollRequest) GetUpdaterId() string {
	if x != nil {
		return x.UpdaterId
	}
	return ""
}

type isUpdatePayrollRequest_Ctc interface {
	isUpdatePayrollRequest_Ctc()
}

type UpdatePayrollRequest_Yearly struct {
	Yearly int32 `protobuf:"varint,2,opt,name=yearly,proto3,oneof"`
}

type UpdatePayrollRequest_Monthly struct {
	Monthly int32 `protobuf:"varint,3,opt,name=monthly,proto3,oneof"`
}

func (*UpdatePayrollRequest_Yearly) isUpdatePayrollRequest_Ctc() {}

func (*UpdatePayrollRequest_Monthly) isUpdatePayrollRequest_Ctc() {}

type PayrollFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//	*PayrollFilter_EmployeeId
	//	*PayrollFilter_EmployeeName
	Key isPayrollFilter_Key `protobuf_oneof:"key"`
}

func (x *PayrollFilter) Reset() {
	*x = PayrollFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payroll_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayrollFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollFilter) ProtoMessage() {}

func (x *PayrollFilter) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollFilter.ProtoReflect.Descriptor instead.
func (*PayrollFilter) Descriptor() ([]byte, []int) {
	return file_payroll_service_proto_rawDescGZIP(), []int{3}
}

func (m *PayrollFilter) GetKey() isPayrollFilter_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *PayrollFilter) GetEmployeeId() string {
	if x, ok := x.GetKey().(*PayrollFilter_EmployeeId); ok {
		return x.EmployeeId
	}
	return ""
}

func (x *PayrollFilter) GetEmployeeName() string {
	if x, ok := x.GetKey().(*PayrollFilter_EmployeeName); ok {
		return x.EmployeeName
	}
	return ""
}

type isPayrollFilter_Key interface {
	isPayrollFilter_Key()
}

type PayrollFilter_EmployeeId struct {
	EmployeeId string `protobuf:"bytes,1,opt,name=employee_id,json=employeeId,proto3,oneof"`
}

type PayrollFilter_EmployeeName struct {
	EmployeeName string `protobuf:"bytes,2,opt,name=employee_name,json=employeeName,proto3,oneof"`
}

func (*PayrollFilter_EmployeeId) isPayrollFilter_Key() {}

func (*PayrollFilter_EmployeeName) isPayrollFilter_Key() {}

type FindEmployeePayrollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *PayrollFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *FindEmployeePayrollRequest) Reset() {
	*x = FindEmployeePayrollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payroll_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEmployeePayrollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEmployeePayrollRequest) ProtoMessage() {}

func (x *FindEmployeePayrollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEmployeePayrollRequest.ProtoReflect.Descriptor instead.
func (*FindEmployeePayrollRequest) Descriptor() ([]byte, []int) {
	return file_payroll_service_proto_rawDescGZIP(), []int{4}
}

func (x *FindEmployeePayrollRequest) GetFilter() *PayrollFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type FindEmployeePayrollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payroll *Payroll `protobuf:"bytes,1,opt,name=payroll,proto3" json:"payroll,omitempty"`
}

func (x *FindEmployeePayrollResponse) Reset() {
	*x = FindEmployeePayrollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payroll_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEmployeePayrollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEmployeePayrollResponse) ProtoMessage() {}

func (x *FindEmployeePayrollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEmployeePayrollResponse.ProtoReflect.Descriptor instead.
func (*FindEmployeePayrollResponse) Descriptor() ([]byte, []int) {
	return file_payroll_service_proto_rawDescGZIP(), []int{5}
}

func (x *FindEmployeePayrollResponse) GetPayroll() *Payroll {
	if x != nil {
		return x.Payroll
	}
	return nil
}

var File_payroll_service_proto protoreflect.FileDescriptor

var file_payroll_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6,
	0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x06, 0x79, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x06, 0x79, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x07, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x42, 0x05, 0x0a, 0x03, 0x63, 0x74, 0x63, 0x22, 0x2d, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x72, 0x6f,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x79,
	0x65, 0x61, 0x72, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x79,
	0x65, 0x61, 0x72, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x05, 0x0a, 0x03, 0x63, 0x74, 0x63, 0x22, 0x60, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x72, 0x6f,
	0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x44, 0x0a, 0x1a, 0x46, 0x69, 0x6e,
	0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c,
	0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x41, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50,
	0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x72, 0x6f,
	0x6c, 0x6c, 0x32, 0xd6, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x72,
	0x6f, 0x6c, 0x6c, 0x12, 0x12, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x1b,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x61, 0x79,
	0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x61, 0x79, 0x72, 0x6f, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2f,
	0x68, 0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payroll_service_proto_rawDescOnce sync.Once
	file_payroll_service_proto_rawDescData = file_payroll_service_proto_rawDesc
)

func file_payroll_service_proto_rawDescGZIP() []byte {
	file_payroll_service_proto_rawDescOnce.Do(func() {
		file_payroll_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_payroll_service_proto_rawDescData)
	})
	return file_payroll_service_proto_rawDescData
}

var file_payroll_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_payroll_service_proto_goTypes = []interface{}{
	(*AddPayrollRequest)(nil),           // 0: AddPayrollRequest
	(*PayrollResponse)(nil),             // 1: PayrollResponse
	(*UpdatePayrollRequest)(nil),        // 2: UpdatePayrollRequest
	(*PayrollFilter)(nil),               // 3: PayrollFilter
	(*FindEmployeePayrollRequest)(nil),  // 4: FindEmployeePayrollRequest
	(*FindEmployeePayrollResponse)(nil), // 5: FindEmployeePayrollResponse
	(*Payroll)(nil),                     // 6: Payroll
}
var file_payroll_service_proto_depIdxs = []int32{
	3, // 0: FindEmployeePayrollRequest.filter:type_name -> PayrollFilter
	6, // 1: FindEmployeePayrollResponse.payroll:type_name -> Payroll
	0, // 2: PayrollService.AddPayroll:input_type -> AddPayrollRequest
	2, // 3: PayrollService.UpdatePayroll:input_type -> UpdatePayrollRequest
	4, // 4: PayrollService.FindEmployeePayroll:input_type -> FindEmployeePayrollRequest
	1, // 5: PayrollService.AddPayroll:output_type -> PayrollResponse
	1, // 6: PayrollService.UpdatePayroll:output_type -> PayrollResponse
	5, // 7: PayrollService.FindEmployeePayroll:output_type -> FindEmployeePayrollResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_payroll_service_proto_init() }
func file_payroll_service_proto_init() {
	if File_payroll_service_proto != nil {
		return
	}
	file_payroll_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_payroll_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPayrollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payroll_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayrollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payroll_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePayrollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payroll_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayrollFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payroll_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEmployeePayrollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payroll_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEmployeePayrollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_payroll_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AddPayrollRequest_Yearly)(nil),
		(*AddPayrollRequest_Monthly)(nil),
	}
	file_payroll_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*UpdatePayrollRequest_Yearly)(nil),
		(*UpdatePayrollRequest_Monthly)(nil),
	}
	file_payroll_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*PayrollFilter_EmployeeId)(nil),
		(*PayrollFilter_EmployeeName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payroll_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payroll_service_proto_goTypes,
		DependencyIndexes: file_payroll_service_proto_depIdxs,
		MessageInfos:      file_payroll_service_proto_msgTypes,
	}.Build()
	File_payroll_service_proto = out.File
	file_payroll_service_proto_rawDesc = nil
	file_payroll_service_proto_goTypes = nil
	file_payroll_service_proto_depIdxs = nil
}
